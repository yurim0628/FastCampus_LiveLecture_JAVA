/* 3일차 */
1. 정보은닉된 멤버변수를 접근하기 위해서 만들어야 하는 메서드는 무엇인가.
 - Getter 메서드: 정보은닉된 멤버변수의 값을 외부에서 읽을 수 있도록 해준다.
 - Setter 메서드: 정보은닉된 멤버변수의 값을 외부에서 변경할 수 있도록 해준다.

2. 객체가 생성된 후 객체 자기 자신을 가리키는 레퍼런스 변수는 무엇인가.
  - this 

3. 매개변수 전달 기법 2가지를 기술하세요.
  - Call by Value: 값에 의한 전달로, 메서드 호출 시 인자로 전달된 값의 복사본이 전달된다.
  - Call by Reference: 참조에 의한 전달로, 메서드 호출 시 인자로 전달된 객체의 주소가 전달되어 같은 객체를 참조한다.

4.  static 키워드의 의미가 무엇인가.
  - static 키워드는 클래스 레벨에 속하는 멤버(메서드, 변수)를 정의할 때 사용된다.
  - static으로 선언된 멤버는 객체의 생성과 관계 없이 클래스 이름으로 직접 접근할 수 있다.
  - 프로그램이 실행될 때 클래스가 메모리에 로드되며, static 멤버들은 프로그램의 종료까지 유지된다.

5. JVM이 사용하는 메모리 모델 3가지를 설명하시오.
  - 메서드 영역(Method Area): 클래스 정보(클래스 이름, 멤버 변수, 메서드 코드 등)가 저장되는 공간.
  - 힙 영역(Heap Area): 동적으로 생성된 객체가 저장되는 공간. 인스턴스 변수들이 위치합니다.
  - 스택 영역(Stack Area): 메서드 호출 시 지역 변수와 메서드 실행에 필요한 데이터가 저장되는 공간.

6. stack, queue 메모리의 특징을 설명하세요.
   - 스택(Stack): 후입선출(LIFO, Last-In-First-Out) 방식으로 동작한다. 메서드 호출과 관련된 데이터를 저장하고 관리하는데 사용된다.
   - 큐(Queue): 선입선출(FIFO, First-In-First-Out) 방식으로 동작한다. 자료를 순서대로 처리해야 할 때 사용된다.

7. 메서드는 2가지 요소로 나누어 지는데 2가지는 무엇인가.
   - 메서드 선언부: 메서드의 이름과 매개변수의 타입과 개수를 나타내는 부분이다.
   - 메서드 구현부: 메서드가 실제로 수행하는 코드 블록 부분이다.

8. 메서드는 동작 후 메서드 이름에 데이터를 저장(담아서)하는 역할을 하는 키워드는 무엇인가.
  -  return

9. 3행 4열의 실수형 데이터를 저장하기 위해서 배열을 생성하세요.
  -  double[][] arr = new double[3][4];
===============================================================================
/ * 4일차 */
1. 문자열과 문자열의 대소를 비교하는 메서드를 작성하시오.
  - Java에서는 문자열의 대소를 비교할 때 compareTo 메서드를 사용한다.

2. 잘 만들어진 VO란 무엇인지 기술하시오.
  - 데이터를 담는데에만 초점을 두고 로직을 가지지 않는 객체를 말한다.

3. 객체가 만들어진 후 객체가 만들어진 메모리 주소를 출력하는 메서드를 기술하시오.
  - toString() 메서드를 재정의한다. Object의 toString() 메서드를 호출하여 객체의 메모리 주소를 반환할 수 있도록 만든다. (super.toString())

4. 모든 클래스의 최상위 클래스는 무엇인지 기술하시오.
  - Object 클래스

5. 메서드의 오버로딩은 무엇인가?
  - 같은 이름의 메서드를 매개변수의 개수나 타입을 다르게 하여 여러 번 정의하는 것을 말한다.

6. 클래스를 디자인하는 시점에서 자기 자신을 가리키는 레퍼런스 변수는 무엇인가? 
  - this 키워드

7. private 생성자를 사용하기 위한 전제 조건은 무엇인가?
  - 클래스의 모든 메서드가 static 이어야 한다.

8. 상위 클래스가 가지고 있는 메서드를 하위 클래스가 변경하여 정의하는 것을 무엇이라고 하는가?
  - 오버라이딩
9. `System sys = new System();` 이처럼 객체를 생성하지 못하는 이유를 기술하시오.
  - System 클래스의 생성자가 private로 선언되어 있기 때문에 외부에서 직접 객체를 생성할 수 없다.

10. 생성자 메서드의 역할을 기술하시오.
- 객체 초기화에 사용되며, 인스턴스 변수의 초기값 설정, 리소스의 할당 등을 생성자에서 처리할 수 있다.
